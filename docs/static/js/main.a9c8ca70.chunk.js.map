{"version":3,"sources":["components/index.module.css","assets/close.svg","components/PreviewDialog.jsx","utils/index.js","components/Scheduler.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","formControl","minWidth","marginLeft","closeButton","position","right","top","time","Array","fill","getMenuItems","map","_","i","num","value","MenuItem","key","PreviewDialog","open","onClose","onSave","onDelete","scheduleData","classes","useState","scheduleForm","setScheduleForm","useEffect","isEmpty","Object","keys","length","start","dayjs","get","end","repeatForTwoWeeks","noCost","disabled","handleTimeChange","event","target","name","handleCheckboxChange","checked","Dialog","maxWidth","DialogTitle","IconButton","className","onClick","src","closeIcon","alt","DialogContent","style","selectContainer","selectLabel","FormControl","Select","onChange","FormControlLabel","control","Checkbox","label","color","DialogActions","Button","variant","set","toISOString","getBackgroundColor","data","days","initialSchedule","Scheduler","schedule","openDialog","state","setState","onCellClick","id","split","j","Number","includes","alert","copiedSchedule","startOfDate","startOf","status","add","index","savedData","localStorage","getItem","JSON","parse","filter","s","startDate","slot","format","startDay","startHour","endHour","slotData","loadData","title","setItem","stringify","scheduleTable","day","cell","slice","date","getDates","d","r","c","backgroundColor","actionButtons","clear","window","location","reload","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a9c8ca70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"scheduleTable\":\"components_scheduleTable__1KLi-\",\"cell\":\"components_cell__Ow8LM\",\"date\":\"components_date__1WOha\",\"selectContainer\":\"components_selectContainer__3frwK\",\"selectLabel\":\"components_selectLabel__G_byF\",\"title\":\"components_title__2TmR4\",\"actionButtons\":\"components_actionButtons__2Sw93\"};","module.exports = __webpack_public_path__ + \"static/media/close.b840e171.svg\";","import React, { useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nimport style from \"./index.module.css\";\n\nimport closeIcon from \"../assets/close.svg\";\n\nconst useStyles = makeStyles(() => ({\n  formControl: {\n    minWidth: 120,\n    marginLeft: 20,\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: 8,\n    top: 8,\n  },\n}));\n\nconst time = Array(24).fill(1);\n\nfunction getTime(num) {\n  if (num === 0 || num === 12) {\n    return num === 0 ? \"12:00 AM\" : \"12:00 PM\";\n  }\n  return num > 12 ? `${num - 12}:00 PM` : `${num}:00 AM`;\n}\n\nfunction getMenuItems() {\n  return time.map((_, i) => {\n    const value = getTime(i);\n    return (\n      <MenuItem value={i} key={value}>\n        {value}\n      </MenuItem>\n    );\n  });\n}\n\nfunction PreviewDialog({ open, onClose, onSave, onDelete, scheduleData }) {\n  const classes = useStyles();\n  const [scheduleForm, setScheduleForm] = useState({\n    scheduleData,\n  });\n\n  useEffect(() => {\n    const isEmpty = Object.keys(scheduleData).length === 0;\n    setScheduleForm({\n      start: isEmpty ? 0 : dayjs(scheduleData[\"start\"]).get(\"hour\"),\n      end: isEmpty ? 0 : dayjs(scheduleData[\"end\"]).get(\"hour\"),\n      repeatForTwoWeeks: isEmpty ? false : scheduleData[\"repeatForTwoWeeks\"],\n      noCost: isEmpty ? false : scheduleData[\"noCost\"],\n      disabled: isEmpty\n        ? false\n        : scheduleData[\"status\"] === \"booked\" ||\n          scheduleData[\"status\"] === \"booked-inactive\"\n        ? true\n        : false,\n      scheduleData,\n    });\n  }, [scheduleData]);\n\n  const {\n    start = 0,\n    end = 0,\n    repeatForTwoWeeks = false,\n    noCost = false,\n    disabled = false,\n  } = scheduleForm;\n\n  function handleTimeChange(event) {\n    setScheduleForm({\n      ...scheduleForm,\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  function handleCheckboxChange(event, checked) {\n    setScheduleForm({ ...scheduleForm, [event.target.name]: checked });\n  }\n\n  function handleDelete() {\n    onDelete(scheduleData[\"start\"], scheduleData[\"end\"]);\n  }\n\n  function handleSave() {\n    onSave({\n      start: dayjs(scheduleData[\"start\"]).set(\"hour\", start).toISOString(),\n      end: dayjs(scheduleData[\"start\"]).set(\"hour\", end).toISOString(),\n      repeatForTwoWeeks,\n      noCost,\n    });\n  }\n\n  return (\n    <Dialog maxWidth=\"xs\" open={open} onClose={onClose}>\n      <DialogTitle>\n        Schedule time period\n        <IconButton className={classes.closeButton} onClick={onClose}>\n          <img src={closeIcon} alt=\"close\" />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <div>\n          {!disabled\n            ? \"Schedule your availability for as far as two weeks from now.\"\n            : \"You are booked for the selected time period.\"}\n        </div>\n        <div className={style.selectContainer}>\n          <div className={style.selectLabel}>Start time:</div>\n          <div>\n            <FormControl className={classes.formControl} disabled={disabled}>\n              <Select name=\"start\" value={start} onChange={handleTimeChange}>\n                {getMenuItems()}\n              </Select>\n            </FormControl>\n          </div>\n        </div>\n        <div className={style.selectContainer}>\n          <div className={style.selectLabel}>End time:</div>\n          <div>\n            <FormControl className={classes.formControl} disabled={disabled}>\n              <Select name=\"end\" value={end} onChange={handleTimeChange}>\n                {getMenuItems()}\n              </Select>\n            </FormControl>\n          </div>\n        </div>\n        <div>\n          <FormControlLabel\n            disabled={disabled}\n            control={\n              <Checkbox\n                checked={repeatForTwoWeeks}\n                onChange={handleCheckboxChange}\n                name=\"repeatForTwoWeeks\"\n              />\n            }\n            label=\"Repeat for next two weeks\"\n          />\n        </div>\n        <div>\n          <FormControlLabel\n            disabled={disabled}\n            color=\"primary\"\n            control={\n              <Checkbox\n                checked={noCost}\n                onChange={handleCheckboxChange}\n                name=\"noCost\"\n              />\n            }\n            label=\"No cost\"\n          />\n        </div>\n      </DialogContent>\n      <DialogActions>\n        {!disabled ? (\n          <>\n            <Button onClick={handleDelete} variant=\"text\" color=\"primary\">\n              DELETE\n            </Button>\n            <Button onClick={handleSave} variant=\"text\" color=\"primary\">\n              SAVE\n            </Button>\n          </>\n        ) : (\n          <Button onClick={onClose} variant=\"text\" color=\"primary\">\n            OK\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default PreviewDialog;\n","import dayjs from \"dayjs\";\n\nexport function getDates() {\n  const date = dayjs().get(\"date\");\n  return Array(7)\n    .fill(0)\n    .map((_, i) => date + i);\n}\n\nexport function getTime(num) {\n  if (num === 0 || num === 12) {\n    return num === 0 ? \"12 a\" : \"12 p\";\n  }\n  return num > 12 ? num - 12 : num;\n}\n\nexport function getBackgroundColor(data) {\n  if (typeof data === \"boolean\") {\n    return \"unset\";\n  }\n  switch (data[\"status\"]) {\n    case \"inactive\":\n      return \"#e0e0e0\";\n    case \"selected\":\n      return \"#01b2ff\";\n    case \"booked\":\n      return \"#ff0100\";\n    case \"booked-inactive\":\n      return \"#ff9696\";\n    default:\n      return \"unset\";\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport Button from \"@material-ui/core/Button\";\nimport PreviewDialog from \"./PreviewDialog\";\nimport style from \"./index.module.css\";\n\nimport { getBackgroundColor, getDates, getTime } from \"../utils\";\n\nconst INACTIVE_HOURS = 2;\nconst DEFAULT_ACTIVE_HOURS = 2;\nconst days = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n];\nconst initialSchedule = Array(24)\n  .fill(1)\n  .map(() => new Array(days.length).fill(false));\n\nfunction Scheduler() {\n  const [state, setState] = useState({\n    schedule: initialSchedule,\n    openDialog: false,\n  });\n  const { schedule, openDialog, scheduleData = {} } = state;\n\n  function onCellClick(event) {\n    let [i, j] = event.target.id.split(\",\");\n    i = Number(i);\n    j = Number(j);\n\n    if (\n      [\"selected\", \"inactive\", \"booked\", \"booked-inactive\"].includes(\n        typeof schedule[i][j] === \"object\" ? schedule[i][j][\"status\"] : \"\"\n      )\n    ) {\n      setState({\n        ...state,\n        scheduleData: schedule[i][j],\n        openDialog: true,\n      });\n      return;\n    }\n\n    if (\n      i < INACTIVE_HOURS ||\n      i > 23 - (INACTIVE_HOURS + DEFAULT_ACTIVE_HOURS)\n    ) {\n      alert(\n        `Slot can be selected between ${INACTIVE_HOURS} am and ${\n          23 - (INACTIVE_HOURS + DEFAULT_ACTIVE_HOURS) - 12\n        } pm`\n      );\n      return;\n    }\n\n    const copiedSchedule = [...schedule];\n    const startOfDate = dayjs().startOf(\"date\");\n    const start = startOfDate.add(j, \"day\").add(i, \"hour\").toISOString();\n    const end = startOfDate\n      .add(j, \"day\")\n      .add(i + 3, \"hour\")\n      .toISOString();\n    const data = { status: \"selected\", start, end };\n    copiedSchedule[i][j] = data;\n    for (let index = 1; index <= DEFAULT_ACTIVE_HOURS; index++) {\n      copiedSchedule[i + index][j] = data;\n    }\n    for (let index = 1; index <= INACTIVE_HOURS; index++) {\n      copiedSchedule[i - index][j] = { ...data, status: \"inactive\" };\n      copiedSchedule[i + index + DEFAULT_ACTIVE_HOURS][j] = {\n        ...data,\n        status: \"inactive\",\n      };\n    }\n\n    setState({\n      ...state,\n      schedule: copiedSchedule,\n      scheduleData: false,\n    });\n  }\n\n  function onDialogClose() {\n    setState({ ...state, openDialog: false, scheduleData: false });\n  }\n\n  function onDelete(start, end) {\n    let [startDay, startHour] = dayjs(start).format(\"D,H\").split(\",\");\n    const endHour = dayjs(end).get(\"hour\");\n    startDay = Number(startDay) - dayjs().startOf(\"date\").get(\"date\");\n    startHour = Number(startHour);\n    const copiedSchedule = [...schedule];\n    for (let i = 0; i < 24; i++) {\n      for (let j = 0; j < 7; j++) {\n        if (\n          j === startDay &&\n          i >= startHour - INACTIVE_HOURS &&\n          i <= endHour + INACTIVE_HOURS\n        ) {\n          copiedSchedule[i][j] = false;\n        }\n      }\n    }\n    setState({\n      ...state,\n      openDialog: false,\n      scheduleData: false,\n      schedule: copiedSchedule,\n    });\n  }\n\n  function onSave(data) {\n    let savedData = localStorage.getItem(\"bookedSlots\");\n    if (savedData === null) {\n      localStorage.setItem(\"bookedSlots\", JSON.stringify([data]));\n    } else {\n      savedData = [data, ...JSON.parse(savedData)];\n      localStorage.setItem(\"bookedSlots\", JSON.stringify(savedData));\n    }\n    let [startDay, startHour] = dayjs(data.start).format(\"D,H\").split(\",\");\n    const endHour = dayjs(data.end).get(\"hour\");\n    startDay = Number(startDay) - dayjs().startOf(\"date\").get(\"date\");\n    startHour = Number(startHour);\n    const copiedSchedule = [...schedule];\n    for (let i = 0; i < 24; i++) {\n      for (let j = 0; j < 7; j++) {\n        const slotData = {\n          start: data.start,\n          end: data.end,\n          repeatForTwoWeeks: data.repeatForTwoWeeks,\n          noCost: data.noCost,\n        };\n        if (j === startDay && i >= startHour && i < endHour) {\n          copiedSchedule[i][j] = {\n            ...slotData,\n            status: \"booked\",\n          };\n        }\n        if (\n          j === startDay &&\n          i >= startHour - INACTIVE_HOURS &&\n          i < startHour\n        ) {\n          copiedSchedule[i][j] = {\n            ...slotData,\n            status: \"booked-inactive\",\n          };\n        }\n        if (j === startDay && i >= endHour && i < endHour + INACTIVE_HOURS) {\n          copiedSchedule[i][j] = {\n            ...slotData,\n            status: \"booked-inactive\",\n          };\n        }\n      }\n    }\n    setState({\n      ...state,\n      openDialog: false,\n      scheduleData: false,\n      schedule: copiedSchedule,\n    });\n  }\n\n  function loadData() {\n    let savedData = localStorage.getItem(\"bookedSlots\");\n    if (savedData === null) {\n      setState({\n        ...state,\n        openDialog: false,\n        scheduleData: false,\n        schedule: initialSchedule,\n      });\n      return;\n    }\n    savedData = JSON.parse(savedData);\n    savedData = savedData.filter((s) => {\n      const startDate = dayjs(s.start).get(\"date\");\n      const startOfDate = dayjs().startOf(\"date\").get(\"date\");\n      return startDate - startOfDate >= 0 && startDate - startOfDate <= 6\n        ? true\n        : false;\n    });\n    const copiedSchedule = [...schedule];\n    for (const slot of savedData) {\n      let [startDay, startHour] = dayjs(slot.start).format(\"D,H\").split(\",\");\n      const endHour = dayjs(slot.end).get(\"hour\");\n      startDay = Number(startDay) - dayjs().startOf(\"date\").get(\"date\");\n      startHour = Number(startHour);\n      for (let i = 0; i < 24; i++) {\n        for (let j = 0; j < 7; j++) {\n          const slotData = {\n            start: slot.start,\n            end: slot.end,\n            repeatForTwoWeeks: slot.repeatForTwoWeeks,\n            noCost: slot.noCost,\n          };\n          if (j === startDay && i >= startHour && i < endHour) {\n            copiedSchedule[i][j] = {\n              ...slotData,\n              status: \"booked\",\n            };\n          }\n          if (\n            j === startDay &&\n            i >= startHour - INACTIVE_HOURS &&\n            i < startHour\n          ) {\n            copiedSchedule[i][j] = {\n              ...slotData,\n              status: \"booked-inactive\",\n            };\n          }\n          if (j === startDay && i >= endHour && i < endHour + INACTIVE_HOURS) {\n            copiedSchedule[i][j] = {\n              ...slotData,\n              status: \"booked-inactive\",\n            };\n          }\n        }\n      }\n    }\n    setState({\n      ...state,\n      openDialog: false,\n      scheduleData: false,\n      schedule: copiedSchedule,\n    });\n  }\n\n  function clearLocalStorage() {\n    localStorage.clear();\n    window.location.reload();\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []); // eslint-disable-line\n\n  return (\n    <>\n      <div className={style.title}>\n        <h2>Select a new schedule</h2>\n        <div>{dayjs().format(\"MMMM, YYYY\")}</div>\n      </div>\n      <PreviewDialog\n        open={openDialog}\n        onClose={onDialogClose}\n        onDelete={onDelete}\n        onSave={onSave}\n        scheduleData={scheduleData}\n      />\n      <div>\n        <table className={style.scheduleTable}>\n          <thead>\n            <tr>\n              <th></th>\n              {days.map((day) => (\n                <th className={style.cell} key={day}>\n                  {day.slice(0, 1)}\n                </th>\n              ))}\n            </tr>\n            <tr className={style.date}>\n              <th></th>\n              {getDates().map((d) => (\n                <th key={`date-${d}`} className={style.cell}>\n                  {d}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {schedule.map((r, i) => {\n              return (\n                <tr key={`row-${i}`}>\n                  {[\n                    <td key={`time-${i}`}>{getTime(i)}</td>,\n                    ...r.map((c, j) => {\n                      return (\n                        <td\n                          key={`${i},${j}`}\n                          id={`${i},${j}`}\n                          onClick={onCellClick}\n                          className={style.cell}\n                          style={{\n                            backgroundColor: getBackgroundColor(c),\n                          }}\n                        ></td>\n                      );\n                    }),\n                  ]}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      <div className={style.actionButtons}>\n        <Button color=\"primary\" variant=\"outlined\" onClick={clearLocalStorage}>\n          Clear Local Storage\n        </Button>\n      </div>\n    </>\n  );\n}\n\nexport default Scheduler;\n","import React from \"react\";\nimport Scheduler from \"./components/Scheduler\";\n\nfunction App() {\n  return (\n    <>\n      <Scheduler />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}